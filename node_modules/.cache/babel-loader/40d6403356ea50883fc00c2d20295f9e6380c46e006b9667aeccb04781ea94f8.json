{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  state: {\n    isCollapse: false,\n    tabList: [{\n      path: '/home',\n      name: 'home',\n      label: '首页',\n      icon: 's-home',\n      url: 'Home/Home'\n    }],\n    tabs: [{\n      path: '/home',\n      name: 'home',\n      label: '首页',\n      icon: 's-home',\n      url: 'Home/Home'\n    }],\n    menu: []\n  },\n  mutations: {\n    changeCollapse(state) {\n      state.isCollapse = !state.isCollapse;\n    },\n    selectMenu(state, val) {\n      //state是vuex的state对象，val是触发selectMenu时传过来的item\n      // console.log(\"==========state\",state)\n      console.log(\"========val\", val);\n      // 判断添加的数据是否为首页\n      if (val.name !== 'home') {\n        const index = state.tabs.findIndex(item => item.name === val.name);\n        // 如果不存在\n        if (index === -1) {\n          state.tabs.push(val);\n        }\n      }\n      ;\n      console.log(\"===========tags===111\", state.tabs);\n      state.tabList = [];\n      state.tabList.unshift({\n        path: '/home',\n        name: 'home',\n        label: '首页',\n        icon: 's-home',\n        url: 'Home/Home'\n      });\n      if (val.name !== 'home') {\n        if (val.url.indexOf('/') != -1) {\n          state.tabList.push({\n            label: \"其他\"\n          });\n        }\n        state.tabList.push(val);\n      }\n    },\n    closeMenu(state, item) {\n      const index = state.tabs.findIndex(val => val.name == item.name);\n      state.tabs.splice(index, 1);\n    },\n    setMenu(state, val) {\n      console.log(\"==========val\", val);\n      state.menu = val;\n      sessionStorage.setItem('menu', JSON.stringify(val));\n    },\n    addMenu(state, router) {\n      //组装动态路由\n      const menuArray = [];\n      if (!sessionStorage.getItem('menu')) return;\n      const menu = JSON.parse(sessionStorage.getItem('menu'));\n      state.menu = menu;\n      menu.forEach(item => {\n        /*if(item.children){\r\n            item.children=item.children.map(val=>{\r\n                console.log(\"=============val\",val)\r\n                val.component=()=>import(`../views/${val.url}`)\r\n                return val;\r\n            })\r\n        } else {\r\n            item.component = () => import(`../views/${item.url}`)\r\n        }\r\n        console.log(\"============item\",111)\r\n        menuArray.push(item)*/\n        if (item.children) {\n          item.children = item.children.map(item => {\n            item.component = () => import(`../views/${item.url}`);\n            return item;\n          });\n          menuArray.push(...item.children);\n        } else {\n          item.component = () => import(`../views/${item.url}`);\n          menuArray.push(item);\n        }\n      });\n      console.log(\"==========menuArray\", menuArray);\n      // 路由的动态添加\n      menuArray.forEach(item => {\n        router.addRoute('Main', item);\n      });\n    }\n  }\n};","map":{"version":3,"names":["state","isCollapse","tabList","path","name","label","icon","url","tabs","menu","mutations","changeCollapse","selectMenu","val","console","log","index","findIndex","item","push","unshift","indexOf","closeMenu","splice","setMenu","sessionStorage","setItem","JSON","stringify","addMenu","router","menuArray","getItem","parse","forEach","children","map","component","addRoute"],"sources":["D:/Program Files (x86)/project/my-app/src/store/tab.js"],"sourcesContent":["export default{\r\n    state:{\r\n        isCollapse:false,\r\n        tabList:[{\r\n            path: '/home',\r\n            name: 'home',\r\n            label: '首页',\r\n            icon: 's-home',\r\n            url: 'Home/Home'\r\n        }],\r\n        tabs:[{\r\n            path: '/home',\r\n            name: 'home',\r\n            label: '首页',\r\n            icon: 's-home',\r\n            url: 'Home/Home'\r\n        }],\r\n        menu:[]\r\n    },\r\n    mutations:{\r\n        changeCollapse(state){\r\n            state.isCollapse=!state.isCollapse;\r\n        },\r\n        selectMenu(state,val){//state是vuex的state对象，val是触发selectMenu时传过来的item\r\n            // console.log(\"==========state\",state)\r\n            console.log(\"========val\",val)\r\n            // 判断添加的数据是否为首页\r\n            if (val.name !== 'home') {\r\n                const index = state.tabs.findIndex(item => item.name === val.name)\r\n                // 如果不存在\r\n                if (index === -1) {\r\n                    state.tabs.push(val)\r\n                }\r\n            };\r\n            console.log(\"===========tags===111\",state.tabs)\r\n            state.tabList=[];\r\n            state.tabList.unshift({\r\n                path: '/home',\r\n                name: 'home',\r\n                label: '首页',\r\n                icon: 's-home',\r\n                url: 'Home/Home'\r\n            });\r\n            if (val.name !== 'home') {\r\n                if(val.url.indexOf('/')!=-1){\r\n                    state.tabList.push({label:\"其他\"})\r\n                }\r\n                state.tabList.push(val)\r\n            }\r\n            \r\n        },\r\n        closeMenu(state,item){\r\n            const index=state.tabs.findIndex(val=>val.name==item.name);\r\n            state.tabs.splice(index, 1)\r\n        },\r\n        setMenu(state,val){\r\n            console.log(\"==========val\",val)\r\n            state.menu = val\r\n            sessionStorage.setItem('menu', JSON.stringify(val))\r\n        },\r\n        addMenu(state,router){\r\n            //组装动态路由\r\n            const menuArray=[];\r\n            if (!sessionStorage.getItem('menu')) return\r\n            const menu = JSON.parse(sessionStorage.getItem('menu'))\r\n            state.menu = menu\r\n            menu.forEach(item => {\r\n                /*if(item.children){\r\n                    item.children=item.children.map(val=>{\r\n                        console.log(\"=============val\",val)\r\n                        val.component=()=>import(`../views/${val.url}`)\r\n                        return val;\r\n                    })\r\n                } else {\r\n                    item.component = () => import(`../views/${item.url}`)\r\n                }\r\n                console.log(\"============item\",111)\r\n                menuArray.push(item)*/\r\n                if (item.children) {\r\n                    item.children = item.children.map(item => {\r\n\r\n                        item.component = () => import(`../views/${item.url}`)\r\n                        return item\r\n                    })\r\n                    menuArray.push(...item.children)\r\n                } else {\r\n\r\n                    item.component = () => import(`../views/${item.url}`)\r\n                    menuArray.push(item)\r\n                }\r\n            });\r\n            console.log(\"==========menuArray\",menuArray)            \r\n             // 路由的动态添加\r\n             menuArray.forEach(item => {\r\n                router.addRoute('Main', item)\r\n            })\r\n        }\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}